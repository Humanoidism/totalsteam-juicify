// Generated by CoffeeScript 1.6.3
var Blender, Recipe;

Recipe = (function() {
  function Recipe() {
    this.ingredients = [];
  }

  Recipe.prototype.addIngredient = function(options) {
    var drops, id, liquidAmount, name, percentage, _ref, _ref1, _ref2, _ref3, _ref4;
    this.options = options;
    id = (_ref = this.options.id) != null ? _ref : void 0;
    name = (_ref1 = this.options.name) != null ? _ref1 : 'N/A';
    drops = (_ref2 = this.options.drops) != null ? _ref2 : 0;
    liquidAmount = (_ref3 = this.options.liquidAmount) != null ? _ref3 : 0;
    percentage = (_ref4 = this.options.percentage) != null ? _ref4 : 0;
    _ref = {
      id: id,
      name: name,
      liquidAmount: percentage / liquidAmount,
      drops: liquidAmount * drops,
      percentage: percentage
    };
    this.ingredients.push(_ref);
    return _ref;
  };

  Recipe.prototype.getIngredient = function(id) {
    var ingredient, _i, _len, _ref, _results;
    _ref = this.ingredients;
    _results = [];
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      ingredient = _ref[_i];
      if (ingredient.id === id) {
        _results.push(ingredient);
      }
    }
    return _results;
  };

  Recipe.prototype.updateIngredient = function(id, percentage) {
    var ingredient, key, _ref;
    _ref = this.ingredients;
    for (key in _ref) {
      ingredient = _ref[key];
      if (ingredient.id === id) {
        ingredient.percentage = percentage;
      }
    }
  };

  Recipe.prototype.removeIngredient = function(index) {
    return this.ingredients.splice(index, 1);
  };

  return Recipe;

})();

Blender = (function() {
  function Blender(fields) {
    var add, aroma, total, _i, _len, _ref;
    this.fields = fields;
    this.recipe = new Recipe();
    this.base = (this.fields.nicoPGVG <= 0 ? 0 : 100 * (this.fields.nicoStr / this.fields.nicoPGVG));
    total = 0;
    add = function(i) {
      return total += parseInt(i.value);
    };
    if (typeof this.fields.aromas === 'object') {
      _ref = this.fields.aromas;
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        aroma = _ref[_i];
        add(aroma);
      }
    }
    this.pg = this.fields.pg - ((this.base / 2) + ((this.fields.water + total) * (this.fields.pg / 100)));
    this.vg = this.fields.vg - ((this.base / 2) + ((this.fields.water + total) * (this.fields.vg / 100)));
    return;
  }

  Blender.prototype.addIngredient = function(id, name, percentage) {
    return this.recipe.addIngredient({
      id: id,
      name: name,
      liquidAmount: this.fields.liquidAmount,
      drops: this.fields.drops,
      percentage: percentage
    });
  };

  return Blender;

})();
